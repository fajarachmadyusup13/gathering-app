// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/fajarachmadyusup13/gathering-app/internal/model (interfaces: MemberUsecase)

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	reflect "reflect"

	model "github.com/fajarachmadyusup13/gathering-app/internal/model"
	gomock "github.com/golang/mock/gomock"
)

// MockMemberUsecase is a mock of MemberUsecase interface.
type MockMemberUsecase struct {
	ctrl     *gomock.Controller
	recorder *MockMemberUsecaseMockRecorder
}

// MockMemberUsecaseMockRecorder is the mock recorder for MockMemberUsecase.
type MockMemberUsecaseMockRecorder struct {
	mock *MockMemberUsecase
}

// NewMockMemberUsecase creates a new mock instance.
func NewMockMemberUsecase(ctrl *gomock.Controller) *MockMemberUsecase {
	mock := &MockMemberUsecase{ctrl: ctrl}
	mock.recorder = &MockMemberUsecaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMemberUsecase) EXPECT() *MockMemberUsecaseMockRecorder {
	return m.recorder
}

// DeleteMemberByID mocks base method.
func (m *MockMemberUsecase) DeleteMemberByID(arg0 context.Context, arg1 int64) (*model.Member, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteMemberByID", arg0, arg1)
	ret0, _ := ret[0].(*model.Member)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeleteMemberByID indicates an expected call of DeleteMemberByID.
func (mr *MockMemberUsecaseMockRecorder) DeleteMemberByID(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteMemberByID", reflect.TypeOf((*MockMemberUsecase)(nil).DeleteMemberByID), arg0, arg1)
}

// FindMemberByID mocks base method.
func (m *MockMemberUsecase) FindMemberByID(arg0 context.Context, arg1 int64) (*model.Member, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindMemberByID", arg0, arg1)
	ret0, _ := ret[0].(*model.Member)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FindMemberByID indicates an expected call of FindMemberByID.
func (mr *MockMemberUsecaseMockRecorder) FindMemberByID(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindMemberByID", reflect.TypeOf((*MockMemberUsecase)(nil).FindMemberByID), arg0, arg1)
}

// Register mocks base method.
func (m *MockMemberUsecase) Register(arg0 context.Context, arg1 *model.Member) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Register", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// Register indicates an expected call of Register.
func (mr *MockMemberUsecaseMockRecorder) Register(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Register", reflect.TypeOf((*MockMemberUsecase)(nil).Register), arg0, arg1)
}

// UpdateMemberByID mocks base method.
func (m *MockMemberUsecase) UpdateMemberByID(arg0 context.Context, arg1 *model.Member) (*model.Member, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateMemberByID", arg0, arg1)
	ret0, _ := ret[0].(*model.Member)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateMemberByID indicates an expected call of UpdateMemberByID.
func (mr *MockMemberUsecaseMockRecorder) UpdateMemberByID(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateMemberByID", reflect.TypeOf((*MockMemberUsecase)(nil).UpdateMemberByID), arg0, arg1)
}
