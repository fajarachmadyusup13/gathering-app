// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/fajarachmadyusup13/gathering-app/internal/model (interfaces: InvitationRepository)

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	reflect "reflect"

	model "github.com/fajarachmadyusup13/gathering-app/internal/model"
	gomock "github.com/golang/mock/gomock"
)

// MockInvitationRepository is a mock of InvitationRepository interface.
type MockInvitationRepository struct {
	ctrl     *gomock.Controller
	recorder *MockInvitationRepositoryMockRecorder
}

// MockInvitationRepositoryMockRecorder is the mock recorder for MockInvitationRepository.
type MockInvitationRepositoryMockRecorder struct {
	mock *MockInvitationRepository
}

// NewMockInvitationRepository creates a new mock instance.
func NewMockInvitationRepository(ctrl *gomock.Controller) *MockInvitationRepository {
	mock := &MockInvitationRepository{ctrl: ctrl}
	mock.recorder = &MockInvitationRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockInvitationRepository) EXPECT() *MockInvitationRepositoryMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockInvitationRepository) Create(arg0 context.Context, arg1 *model.Invitation) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// Create indicates an expected call of Create.
func (mr *MockInvitationRepositoryMockRecorder) Create(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockInvitationRepository)(nil).Create), arg0, arg1)
}

// DeleteByID mocks base method.
func (m *MockInvitationRepository) DeleteByID(arg0 context.Context, arg1 int64) (*model.Invitation, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteByID", arg0, arg1)
	ret0, _ := ret[0].(*model.Invitation)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeleteByID indicates an expected call of DeleteByID.
func (mr *MockInvitationRepositoryMockRecorder) DeleteByID(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteByID", reflect.TypeOf((*MockInvitationRepository)(nil).DeleteByID), arg0, arg1)
}

// FindByID mocks base method.
func (m *MockInvitationRepository) FindByID(arg0 context.Context, arg1 int64) (*model.Invitation, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindByID", arg0, arg1)
	ret0, _ := ret[0].(*model.Invitation)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FindByID indicates an expected call of FindByID.
func (mr *MockInvitationRepositoryMockRecorder) FindByID(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindByID", reflect.TypeOf((*MockInvitationRepository)(nil).FindByID), arg0, arg1)
}

// UpdateByID mocks base method.
func (m *MockInvitationRepository) UpdateByID(arg0 context.Context, arg1 *model.Invitation) (*model.Invitation, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateByID", arg0, arg1)
	ret0, _ := ret[0].(*model.Invitation)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateByID indicates an expected call of UpdateByID.
func (mr *MockInvitationRepositoryMockRecorder) UpdateByID(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateByID", reflect.TypeOf((*MockInvitationRepository)(nil).UpdateByID), arg0, arg1)
}
